.. ------------------------------------------------------------------------------------------------
.. HALTABLE
.. ------------------------------------------------------------------------------------------------

.. _haltable:

Haltable
---------------------------------------

+-----------------------+-------------------------------------------------------------------------+
| **Title:**            | Haltable                                                                |
+-----------------------+-------------------------------------------------------------------------+
| **Description:**      | Modified `Token Market`_ Smart Contract that provides a capability to   |
|                       | halt a contract (namely a CrowdSale). Updated by Tru Ltd.               |
+-----------------------+-------------------------------------------------------------------------+
| **Author:**           | TokenMarket Ltd/Updated by Ian Bray, Tru Ltd                            |
+-----------------------+-------------------------------------------------------------------------+
| **Solidity Version:** | 0.4.18                                                                  |
+-----------------------+-------------------------------------------------------------------------+
| **Relative Path:**    | :file:`./contracts/supporting/Haltable.sol`                             |
+-----------------------+-------------------------------------------------------------------------+
| **License:**          | `Apache 2 License`_                                                     |
+-----------------------+-------------------------------------------------------------------------+
| **Current Version:**  | |version|                                                               |
+-----------------------+-------------------------------------------------------------------------+
| **Original Source:**  | `Haltable Source`_                                                      |
+-----------------------+-------------------------------------------------------------------------+

.. ------------------------------------------------------------------------------------------------

.. _haltable-imports:

1. Imports & Dependencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following imports and dependencies exist for the `Haltable`_ Smart Contract:

+----------------+--------------------------------------------------------------------------------+
| **Name**       | **Description**                                                                |
+----------------+--------------------------------------------------------------------------------+
| :ref:`ownable` | `Zeppelin Solidity`_ Smart Contract for Ownership capabilities in a token      |
+----------------+--------------------------------------------------------------------------------+

.. ------------------------------------------------------------------------------------------------

.. _haltable-variables:

2. Variables
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following variables exist for the `Haltable`_ Smart Contract:

+--------------+----------+---------+-------------------------------------------------------------+
| **Variable** | **Type** | **Vis** | **Details**                                                 |
+--------------+----------+---------+-------------------------------------------------------------+
| halted       | bool     | public  | Variable to indicate whether the contract is halted or not  |
+--------------+----------+---------+-------------------------------------------------------------+

.. ------------------------------------------------------------------------------------------------

.. _haltable-enums:

3. Enums
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

There are no enums for the `Haltable`_ Smart Contract.

.. ------------------------------------------------------------------------------------------------

.. _haltable-events:

4. Events
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following events exist for the `Haltable`_ Smart Contract:

+---------------+---------------------------------------------------------------------------------+
| **Name**      | **Description**                                                                 |
+---------------+---------------------------------------------------------------------------------+
| `HaltStatus`_ | Event to track halted status changes                                            |
+---------------+---------------------------------------------------------------------------------+

.. ------------------------------------------------------------------------------------------------

.. _haltable-halt-status:

HaltStatus
'''''''''''''''''''''

+------------------+------------------------------------------------------------------------------+
| **Event Name:**  | HaltStatus                                                                   |
+------------------+------------------------------------------------------------------------------+
| **Description:** | Event to track halted status changes                                         |
+------------------+------------------------------------------------------------------------------+

Usage
^^^^^^^^^^^^^^^^^^^^^

The `HaltStatus`_ event has the following usage syntax and arguments:

+---+--------------+----------+--------------+----------------------------------------------------+
|   | **Argument** | **Type** | **Indexed?** | **Details**                                        |
+---+--------------+----------+--------------+----------------------------------------------------+
| 1 |  status      | bool     | No           | Whether the contract is halted or not              |
+---+--------------+----------+--------------+----------------------------------------------------+

.. code-block:: c
   :caption: **HaltStatus Usage Example**

    HaltStatus(true);

.. ------------------------------------------------------------------------------------------------

.. _haltable-mappings:

5. Mappings
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The are no mappings for the `Haltable`_ Smart Contract.

.. ------------------------------------------------------------------------------------------------

.. _haltable-modifiers:

6. Modifiers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following modifiers exist for the `Haltable`_ Smart Contract:

+-----------------------------------+-------------------------------------------------------------+
| **Name**                          | **Description**                                             |
+-----------------------------------+-------------------------------------------------------------+
| `stopInEmergency`_                | Modifier that requires the contract is not halted           |
+-----------------------------------+-------------------------------------------------------------+
| :ref:`haltable-only-in-emergency` | Modifier that requires the contract is halted               |
+-----------------------------------+-------------------------------------------------------------+

.. ------------------------------------------------------------------------------------------------

.. _haltable-stop-in-emergency:

stopInEmergency
'''''''''''''''''''''

+--------------------+----------------------------------------------------------------------------+
| **Modifier Name:** | stopInEmergency                                                            |
+--------------------+----------------------------------------------------------------------------+
| **Description:**   | Modifier that requires the contract is not halted                          |
+--------------------+----------------------------------------------------------------------------+

Code
^^^^^^^^^^^^^^^^^^^^^

The code for the `stopInEmergency`_ modifier is as follows:

.. code-block:: c
    :caption: **stopInEmergency Code**
   
    modifier stopInEmergency {
        require(!halted);
        _;
    }

The `stopInEmergency`_ function performs the following:

 - Checks that the *halted* variable is false otherwise it throws

.. ------------------------------------------------------------------------------------------------

.. _haltable-only-in-emergency:

onlyInEmergency
'''''''''''''''''''''

+--------------------+----------------------------------------------------------------------------+
| **Modifier Name:** | onlyInEmergency                                                            |
+--------------------+----------------------------------------------------------------------------+
| **Description:**   | Modifier that requires the contract is halted                              |
+--------------------+----------------------------------------------------------------------------+

Code
^^^^^^^^^^^^^^^^^^^^^

The code for the `onlyInEmergency`_ modifier is as follows:

.. code-block:: c
    :caption: **onlyInEmergency Code**

    modifier onlyInEmergency {
        require(halted);
        _;
    }

The `onlyInEmergency`_ function performs the following:

 - Checks that the *halted* variable is true otherwise it throws

.. ------------------------------------------------------------------------------------------------

.. _haltable-functions:

7. Functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following functions exist for the `Haltable`_ Smart Contract:

+------------------+------------------------------------------------------------------------------+
| **Name**         | **Description**                                                              |
+------------------+------------------------------------------------------------------------------+
| `halt`_          | Function to halt the contract                                                |
+------------------+------------------------------------------------------------------------------+
| `unhalt`_        | Function to unhalt the contract                                              |
+------------------+------------------------------------------------------------------------------+

.. ------------------------------------------------------------------------------------------------

.. _haltable-halt:

halt
'''''''''''''''''''''

+--------------------------+----------------------------------------------------------------------+
| **Function Name:**       | halt                                                                 |
+--------------------------+----------------------------------------------------------------------+
| **Description:**         | Function to halt the contract                                        |
+--------------------------+----------------------------------------------------------------------+
| **Function Type:**       | N/A                                                                  |
+--------------------------+----------------------------------------------------------------------+
| **Function Visibility:** | External                                                             |
+--------------------------+----------------------------------------------------------------------+
| **Function Modifiers:**  | :ref:`onlyOwner <ownable-only-owner>`                                |
+--------------------------+----------------------------------------------------------------------+
| **Return Type:**         | None                                                                 |
+--------------------------+----------------------------------------------------------------------+
| **Return Details:**      | N/A                                                                  |
+--------------------------+----------------------------------------------------------------------+

Code
^^^^^^^^^^^^^^^^^^^^^

The code for the `halt`_ function is as follows:

.. code-block:: c
    :caption: **halt Code**

    function halt() external onlyOwner {
        halted = true;
        HaltStatus(halted);
    }

The `halt`_ function performs the following:

 - Sets the *halted* variable to true
 - Fires the `HaltStatus`_ event

Usage
^^^^^^^^^^^^^^^^^^^^^

The `halt`_ function has the following usage syntax:

.. code-block:: c
   :caption: **halt Usage Example**

    halt();

.. ------------------------------------------------------------------------------------------------

.. _haltable-unhalt:

unhalt
'''''''''''''''''''''

+--------------------------+----------------------------------------------------------------------+
| **Function Name:**       | unhalt                                                               |
+--------------------------+----------------------------------------------------------------------+
| **Description:**         | Function to unhalt the contract                                      |
+--------------------------+----------------------------------------------------------------------+
| **Function Type:**       | N/A                                                                  |
+--------------------------+----------------------------------------------------------------------+
| **Function Visibility:** | External                                                             |
+--------------------------+----------------------------------------------------------------------+
| **Function Modifiers:**  | :ref:`ownable-only-owner`, `onlyInEmergency`_                        |
+--------------------------+----------------------------------------------------------------------+
| **Return Type:**         | None                                                                 |
+--------------------------+----------------------------------------------------------------------+
| **Return Details:**      | N/A                                                                  |
+--------------------------+----------------------------------------------------------------------+

Code
^^^^^^^^^^^^^^^^^^^^^

The code for the `unhalt`_ function is as follows:

.. code-block:: c
    :caption: **unhalt Code**
   
    function unhalt() external onlyOwner onlyInEmergency {
        halted = false;
        HaltStatus(halted);
    }

The `unhalt`_ function performs the following:

 - Sets the *halted* variable to false
 - Fires the `HaltStatus`_ event

Usage
^^^^^^^^^^^^^^^^^^^^^

The `unhalt`_ function has the following usage syntax:

.. code-block:: c
   :caption: **unhalt Usage Example**

    unhalt();

.. ------------------------------------------------------------------------------------------------

.. ------------------------------------------------------------------------------------------------
.. URLs used throughout this page
.. ------------------------------------------------------------------------------------------------

.. _Zeppelin Solidity: https://github.com/OpenZeppelin/zeppelin-solidity
.. _Token Market: https://github.com/TokenMarketNet/ico/
.. _Apache 2 License: https://raw.githubusercontent.com/TruLtd/tru-reputation-token/master/LICENSE
.. _Haltable Source: https://raw.githubusercontent.com/TokenMarketNet/ico/master/contracts/Haltable.sol


.. ------------------------------------------------------------------------------------------------
.. END OF HALTABLE
.. ------------------------------------------------------------------------------------------------